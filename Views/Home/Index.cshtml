@{
    ViewData["Title"] = "Page d'accueil";
}
<link href="~/Content/css/list_retard.css" rel="stylesheet" />



<div class="row">
    <div class="col s12">
        <div class="row">
            <div class="input-field col s12">
                <input type="text" id="autocomplete-input" class="autocomplete">
                <label for="autocomplete-input">Autocomplete</label>
            </div>
        </div>
    </div>
</div>

<div id="vue__app" class="card__container">
   
        <div v-for="retard in retards" class="card__retard">
            <div class="card__header">
                <img :src="retard.Eleve.photo_profile" alt="User profile" />
                <h3>{{retard.pseudo}}</h3>
                <span class=" text-darken-3 vote__value">{{retard.nbVotes}}</span>
            </div>

            <p>
                {{retard.description}}

            </p>
            <div>


                <span :click="updateVote(1,retard)" href="#"><i class="material-icons white-text text-darken-2 ToggleVoteUp">keyboard_arrow_up</i></span>
                <span :click="updateVote(-1,retard)"><i class="material-icons red-text text-darken-2">keyboard_arrow_down</i></span>

            </div>
        </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>
<script>

    var app = new Vue({
        el: '#vue__app',
        data: {
            retards:[]
        },
        mounted() {
            axios.get('/api?titre=o')
                .then(response => {
                    // handle success
                    console.log(response.data);
                    this.retards = response.data.map(retard => {
                        return Object.assign({}, retard, { connectedVote: 0 })
                    });
                    console.log("this.retards: ",this.retards)
                })
        },
        methods: {
            updateVote(isUpvote, retard) {
                console.log("triggered")
                axios.get(`/Home/Updatevote/${retard.id}/${isUpvote}`)
                    .then(function (response) {
                        updatedRetard = this.retards.find(dataRetard => {
                            return dataRetard.id === retard.id
                        })
                        updatedRetard.connectedVote === isUpvote ? 0 : isUpvote
                        console.log("updatedRetard",updatedRetard)
                    })
            }       
        }
    })

    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.autocomplete');
        var instances = M.Autocomplete.init(elems);
    });
    function updateVote(event, idRetard, isupvote) {
        axios.get(`/Home/Updatevote/${idRetard}/${isupvote}`)
            .then(function (response) {
                console.log(response);
                console.log('success')
                console.log(event)
                console.log("Event: ", event.parentNode.parentNode.getElementsByClassName('vote__value')[0])
                const voteValue = event.parentNode.parentNode.getElementsByClassName('vote__value')[0]
                const changeVote = ""
                const classPositif = "green-text text-darken-3 vote__value"
                const classNegatif = "red-text text-darken-3 vote__value"

                if (isupvote == 0) {
                    event.firstElementChild.classList.toggle("red-text"); event.firstElementChild.classList.toggle("white-text");
                    event.firstElementChild.classList.toggle("ToogleVoteDown");



                } else {
                    event.firstElementChild.classList.toggle("green-text"); event.firstElementChild.classList.toggle("white-text");
                    event.firstElementChild.classList.toggle("ToggleVoteUp");
                }


                voteValue.innerText = response.data.nbNewVotes

                if (response.data.nbNewVotes > 0) {
                    voteValue.classList = classPositif
                } else {
                    voteValue.classList = classNegatif

                }

                M.toast({ html: response.data.message })
            })
            .catch(function (error) {
                console.log(error);
                console.log('fail')
            });
    }

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.0/axios.min.js"></script>